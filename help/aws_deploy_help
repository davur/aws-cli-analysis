DEPLOY()							      DEPLOY()



NAME
       deploy -

DESCRIPTION
	  Overview

       This  reference guide provides descriptions of the AWS CodeDeploy APIs.
       For more information about AWS CodeDeploy, see the AWS CodeDeploy  User
       Guide .
	  Using the APIs

       You can use the AWS CodeDeploy APIs to work with the following:

       o Applications  are unique identifiers used by AWS CodeDeploy to ensure
	 the correct combinations of revisions, deployment configurations, and
	 deployment  groups  are  being referenced during deployments. You can
	 use the AWS CodeDeploy APIs to create, delete, get, list, and	update
	 applications.

       o Deployment  configurations  are  sets of deployment rules and success
	 and failure conditions used by AWS CodeDeploy during deployments. You
	 can  use the AWS CodeDeploy APIs to create, delete, get, and list de-
	 ployment configurations.

       o Deployment groups are groups of instances to which application  revi-
	 sions can be deployed. You can use the AWS CodeDeploy APIs to create,
	 delete, get, list, and update deployment groups.

       o Instances represent Amazon EC2 instances to which  application  revi-
	 sions are deployed. Instances are identified by their Amazon EC2 tags
	 or Auto Scaling group names. Instances belong to  deployment  groups.
	 You can use the AWS CodeDeploy APIs to get and list instance.

       o Deployments  represent  the  process  of  deploying  revisions to in-
	 stances. You can use the AWS CodeDeploy APIs to  create,  get,  list,
	 and stop deployments.

       o Application  revisions  are archive files stored in Amazon S3 buckets
	 or GitHub repositories. These revisions contain source content  (such
	 as  source code, web pages, executable files, and deployment scripts)
	 along with an application specification (AppSpec) file. (The  AppSpec
	 file  is  unique to AWS CodeDeploy; it defines the deployment actions
	 you want AWS CodeDeploy to execute.) For application revisions stored
	 in  Amazon S3 buckets, an application revision is uniquely identified
	 by its Amazon S3 object key and its ETag, version, or both.  For  ap-
	 plication revisions stored in GitHub repositories, an application re-
	 vision is uniquely identified by its repository name and  commit  ID.
	 Application revisions are deployed through deployment groups. You can
	 use the AWS CodeDeploy APIs to get, list,  and  register  application
	 revisions.

AVAILABLE COMMANDS
       o add-tags-to-on-premises-instances

       o batch-get-application-revisions

       o batch-get-applications

       o batch-get-deployment-groups

       o batch-get-deployment-instances

       o batch-get-deployments

       o batch-get-on-premises-instances

       o create-application

       o create-deployment

       o create-deployment-config

       o create-deployment-group

       o delete-application

       o delete-deployment-config

       o delete-deployment-group

       o deregister

       o deregister-on-premises-instance

       o get-application

       o get-application-revision

       o get-deployment

       o get-deployment-config

       o get-deployment-group

       o get-deployment-instance

       o get-on-premises-instance

       o help

       o install

       o list-application-revisions

       o list-applications

       o list-deployment-configs

       o list-deployment-groups

       o list-deployment-instances

       o list-deployments

       o list-on-premises-instances

       o push

       o register

       o register-application-revision

       o register-on-premises-instance

       o remove-tags-from-on-premises-instances

       o stop-deployment

       o uninstall

       o update-application

       o update-deployment-group

       o wait



								      DEPLOY()
