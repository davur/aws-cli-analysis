DEPLOY()							      DEPLOY()



NAME
       deploy -

DESCRIPTION
       AWS  CodeDeploy	is a deployment service that automates application de-
       ployments to Amazon EC2 instances,  on-premises	instances  running  in
       your own facility, or serverless AWS Lambda functions.

       You  can deploy a nearly unlimited variety of application content, such
       as an updated Lambda function, code, web and configuration files,  exe-
       cutables,  packages,  scripts, multimedia files, and so on. AWS CodeDe-
       ploy can deploy application content stored in Amazon S3 buckets, GitHub
       repositories,  or  Bitbucket  repositories.  You  do  not  need to make
       changes to your existing code before you can use AWS CodeDeploy.

       AWS CodeDeploy makes it easier for you to rapidly release new features,
       helps you avoid downtime during application deployment, and handles the
       complexity of updating your applications, without many of the risks as-
       sociated with error-prone manual deployments.
	  AWS CodeDeploy Components

       Use  the  information in this guide to help you work with the following
       AWS CodeDeploy components:

       o Application : A name that uniquely  identifies  the  application  you
	 want  to  deploy. AWS CodeDeploy uses this name, which functions as a
	 container, to ensure the correct combination of revision,  deployment
	 configuration,  and  deployment group are referenced during a deploy-
	 ment.

       o Deployment group : A set of individual instances or CodeDeploy Lambda
	 applications.	A Lambda deployment group contains a group of applica-
	 tions. An  EC2/On-premises  deployment  group	contains  individually
	 tagged  instances,  Amazon  EC2  instances in Auto Scaling groups, or
	 both.

       o Deployment configuration : A set of deployment rules  and  deployment
	 success  and  failure	conditions used by AWS CodeDeploy during a de-
	 ployment.

       o Deployment : The process and the components used in  the  process  of
	 updating  a  Lambda  function or of installing content on one or more
	 instances.

       o Application revisions : For an AWS Lambda deployment, this is an App-
	 Spec  file  that  specifies  the Lambda function to update and one or
	 more functions  to  validate  deployment  lifecycle  events.  For  an
	 EC2/On-premises deployment, this is an archive file containing source
	 contentsource code,  web  pages,  executable  files,  and  deployment
	 scriptsalong  with an AppSpec file. Revisions are stored in Amazon S3
	 buckets or GitHub repositories. For Amazon S3, a revision is uniquely
	 identified  by  its  Amazon  S3  object key and its ETag, version, or
	 both. For GitHub, a revision is uniquely identified by its commit ID.

       This guide also contains information to help you get details about  the
       instances  in your deployments, to make on-premises instances available
       for AWS CodeDeploy deployments, and to get details about a Lambda func-
       tion deployment.
	  AWS CodeDeploy Information Resources

       o AWS CodeDeploy User Guide

       o AWS CodeDeploy API Reference Guide

       o AWS CLI Reference for AWS CodeDeploy

       o AWS CodeDeploy Developer Forum

AVAILABLE COMMANDS
       o add-tags-to-on-premises-instances

       o batch-get-application-revisions

       o batch-get-applications

       o batch-get-deployment-groups

       o batch-get-deployment-instances

       o batch-get-deployments

       o batch-get-on-premises-instances

       o continue-deployment

       o create-application

       o create-deployment

       o create-deployment-config

       o create-deployment-group

       o delete-application

       o delete-deployment-config

       o delete-deployment-group

       o delete-git-hub-account-token

       o deregister

       o deregister-on-premises-instance

       o get-application

       o get-application-revision

       o get-deployment

       o get-deployment-config

       o get-deployment-group

       o get-deployment-instance

       o get-on-premises-instance

       o help

       o install

       o list-application-revisions

       o list-applications

       o list-deployment-configs

       o list-deployment-groups

       o list-deployment-instances

       o list-deployments

       o list-git-hub-account-token-names

       o list-on-premises-instances

       o push

       o put-lifecycle-event-hook-execution-status

       o register

       o register-application-revision

       o register-on-premises-instance

       o remove-tags-from-on-premises-instances

       o skip-wait-time-for-instance-termination

       o stop-deployment

       o uninstall

       o update-application

       o update-deployment-group

       o wait



								      DEPLOY()
