KMS()									 KMS()



NAME
       kms -

DESCRIPTION
       AWS  Key  Management Service (AWS KMS) is an encryption and key manage-
       ment web service. This guide describes the AWS KMS operations that  you
       can  call  programmatically. For general information about AWS KMS, see
       the AWS Key Management Service Developer Guide .

       NOTE:
	  AWS provides SDKs that consist of libraries and sample code for var-
	  ious programming languages and platforms (Java, Ruby, .Net, iOS, An-
	  droid, etc.). The SDKs provide a convenient way to  create  program-
	  matic  access  to  AWS  KMS and other AWS services. For example, the
	  SDKs take care of tasks such as signing requests (see below), manag-
	  ing  errors,	and retrying requests automatically. For more informa-
	  tion about the AWS SDKs, including how to download and install them,
	  see Tools for Amazon Web Services .

       We  recommend  that you use the AWS SDKs to make programmatic API calls
       to AWS KMS.

       Clients must support TLS (Transport Layer Security) 1.0.  We  recommend
       TLS  1.2.  Clients must also support cipher suites with Perfect Forward
       Secrecy (PFS) such as Ephemeral Diffie-Hellman (DHE) or Elliptic  Curve
       Ephemeral  Diffie-Hellman  (ECDHE).  Most modern systems such as Java 7
       and later support these modes.
	  Signing Requests

       Requests must be signed by using an access key ID and a	secret	access
       key.  We strongly recommend that you do not use your AWS account (root)
       access key ID and secret key for everyday work with AWS	KMS.  Instead,
       use the access key ID and secret access key for an IAM user, or you can
       use the AWS Security Token Service to generate temporary security  cre-
       dentials that you can use to sign requests.

       All AWS KMS operations require Signature Version 4 .
	  Logging API Requests

       AWS  KMS supports AWS CloudTrail, a service that logs AWS API calls and
       related events for your AWS account and delivers them to an  Amazon  S3
       bucket  that  you specify. By using the information collected by Cloud-
       Trail, you can determine what requests were made to AWS KMS,  who  made
       the  request,  when  it was made, and so on. To learn more about Cloud-
       Trail, including how to turn it on and find your log files, see the AWS
       CloudTrail User Guide .
	  Additional Resources

       For  more  information  about  credentials and request signing, see the
       following:

       o AWS Security Credentials - This topic	provides  general  information
	 about the types of credentials used for accessing AWS.

       o Temporary  Security  Credentials - This section of the IAM User Guide
	 describes how to create and use temporary security credentials.

       o Signature Version 4 Signing Process - This set of  topics  walks  you
	 through the process of signing a request using an access key ID and a
	 secret access key.
	  Commonly Used APIs

       Of the APIs discussed in this guide, the following will prove the  most
       useful  for  most  applications.  You will likely perform actions other
       than these, such as creating keys and assigning policies, by using  the
       console.

       o encrypt

       o decrypt

       o generate-data-key

       o generate-data-key-without-plaintext

AVAILABLE COMMANDS
       o cancel-key-deletion

       o create-alias

       o create-grant

       o create-key

       o decrypt

       o delete-alias

       o delete-imported-key-material

       o describe-key

       o disable-key

       o disable-key-rotation

       o enable-key

       o enable-key-rotation

       o encrypt

       o generate-data-key

       o generate-data-key-without-plaintext

       o generate-random

       o get-key-policy

       o get-key-rotation-status

       o get-parameters-for-import

       o help

       o import-key-material

       o list-aliases

       o list-grants

       o list-key-policies

       o list-keys

       o list-retirable-grants

       o put-key-policy

       o re-encrypt

       o retire-grant

       o revoke-grant

       o schedule-key-deletion

       o update-alias

       o update-key-description



									 KMS()
